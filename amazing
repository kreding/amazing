#!/usr/bin/env node

/**
* Module dependencies.
*/
var child_process = require('child_process'),
    path = require('path'),
    program = require('commander'),
    tools = require('./tools');

var exec = child_process.exec,
    conf = {
        project: "console",
        sourceFolder: "fe-source",
        releaseFolder: "webapp",
        static: "resources",
        port: 9090,
        exclude:[]
    },
    _root = '../console/fe-source',
    _port = '9090';

function setRoot( val ){
    _root = val;
}

function setPort( val ){
    _port = val;
}

function setConfig() {
    var configPath = path.resolve( process.cwd() + '/amazing.json' );
    var newConf = require( configPath );

    // 覆写默认配置
    for ( item in newConf ){
        conf[item] = newConf[item];
    }
}

function startServer(){
    var root = path.resolve('./');
    var port = conf.port;
    var jarPath = path.resolve(__dirname + '/libs/server.jar');
    console.log('root: ', root)

    // 命令行中单独指定参数的优先级高于配置文件中的参数配置
    if( program.root ){
        root = _root;
    }

    if( program.port ){
        port = _port;
    }

    var startSerCommond = 'java -jar  ' + jarPath + ' --base ./ --root ' + root + ' --port ' + port;
    console.log('* Server is starting , port is ' + port);

    var server = exec(startSerCommond, function( err, stdout, stderr ){
        if(err) 
            console.log('* 服务器启动失败！', err);
            throw err;
        console.log('* Congratulation, 服务器启动成功!');
        console.log('* PID: ', server.pid)
    })

    setTimeout(function() {
        console.log('* PID: ', server.pid);
    }, 500);
}

program
    .version('0.0.1')
    .usage('[options] <file ...>')
    .option('-s, --server', '启动web服务器')
    .option('-r, --root <path>', '指定web应用的加载路径', setRoot)
    .option('-p, --port <num>', '指定服务启动端口', setPort)
    .parse(process.argv);

if(program.server) {
    setConfig();
    startServer();
}
